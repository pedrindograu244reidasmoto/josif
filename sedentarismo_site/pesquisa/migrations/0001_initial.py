# Generated by Django 5.2.4 on 2025-07-21 19:02

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='EstrategiaPrevencao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=200)),
                ('descricao', models.TextField()),
                ('tipo', models.CharField(choices=[('individual', 'Individual'), ('institucional', 'Institucional'), ('comunitaria', 'Comunitária')], max_length=20)),
                ('publico_alvo', models.CharField(max_length=100)),
                ('recursos_necessarios', models.TextField()),
                ('prazo_implementacao', models.CharField(max_length=100)),
                ('responsavel', models.CharField(max_length=100)),
                ('data_criacao', models.DateTimeField(auto_now_add=True)),
                ('ativa', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Estratégia de Prevenção',
                'verbose_name_plural': 'Estratégias de Prevenção',
                'ordering': ['-data_criacao'],
            },
        ),
        migrations.CreateModel(
            name='Participante',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=150)),
                ('email', models.EmailField(max_length=254)),
                ('idade', models.PositiveIntegerField()),
                ('sexo', models.CharField(choices=[('M', 'Masculino'), ('F', 'Feminino'), ('O', 'Outro')], max_length=1)),
                ('tipo_participante', models.CharField(choices=[('aluno', 'Aluno'), ('servidor', 'Servidor'), ('morador', 'Morador do Entorno')], max_length=20)),
                ('curso', models.CharField(blank=True, help_text='Para alunos', max_length=100)),
                ('setor', models.CharField(blank=True, help_text='Para servidores', max_length=100)),
                ('data_cadastro', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Participante',
                'verbose_name_plural': 'Participantes',
                'ordering': ['-data_cadastro'],
            },
        ),
        migrations.CreateModel(
            name='IndicadorSaude',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('peso', models.DecimalField(decimal_places=2, help_text='Peso em kg', max_digits=5)),
                ('altura', models.DecimalField(decimal_places=2, help_text='Altura em metros', max_digits=4)),
                ('imc', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('pressao_sistolica', models.PositiveIntegerField(help_text='Pressão sistólica (mmHg)')),
                ('pressao_diastolica', models.PositiveIntegerField(help_text='Pressão diastólica (mmHg)')),
                ('tem_diabetes', models.BooleanField(default=False)),
                ('tem_hipertensao', models.BooleanField(default=False)),
                ('tem_obesidade', models.BooleanField(default=False)),
                ('tem_doenca_cardiovascular', models.BooleanField(default=False)),
                ('fuma', models.BooleanField(default=False)),
                ('consome_alcool', models.BooleanField(default=False)),
                ('data_avaliacao', models.DateTimeField(auto_now_add=True)),
                ('participante', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='pesquisa.participante')),
            ],
            options={
                'verbose_name': 'Indicador de Saúde',
                'verbose_name_plural': 'Indicadores de Saúde',
            },
        ),
        migrations.CreateModel(
            name='BarreiraSedentarismo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('categoria', models.CharField(choices=[('tempo', 'Falta de Tempo'), ('infraestrutura', 'Infraestrutura Inadequada'), ('motivacao', 'Falta de Motivação'), ('conhecimento', 'Falta de Conhecimento'), ('financeiro', 'Limitações Financeiras'), ('saude', 'Problemas de Saúde'), ('social', 'Falta de Apoio Social'), ('tecnologia', 'Uso Excessivo de Tecnologia')], max_length=20)),
                ('descricao', models.TextField()),
                ('intensidade', models.PositiveIntegerField(help_text='Intensidade da barreira (1-5, sendo 5 muito intensa)')),
                ('participante', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='barreiras', to='pesquisa.participante')),
            ],
            options={
                'verbose_name': 'Barreira ao Sedentarismo',
                'verbose_name_plural': 'Barreiras ao Sedentarismo',
            },
        ),
        migrations.CreateModel(
            name='QuestionarioIPAQ',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dias_atividade_vigorosa', models.PositiveIntegerField(help_text='Quantos dias por semana você faz atividades físicas vigorosas?')),
                ('minutos_atividade_vigorosa', models.PositiveIntegerField(help_text='Quantos minutos por dia você dedica a essas atividades?')),
                ('dias_atividade_moderada', models.PositiveIntegerField(help_text='Quantos dias por semana você faz atividades físicas moderadas?')),
                ('minutos_atividade_moderada', models.PositiveIntegerField(help_text='Quantos minutos por dia você dedica a essas atividades?')),
                ('dias_caminhada', models.PositiveIntegerField(help_text='Quantos dias por semana você caminha?')),
                ('minutos_caminhada', models.PositiveIntegerField(help_text='Quantos minutos por dia você dedica à caminhada?')),
                ('horas_sentado_semana', models.DecimalField(decimal_places=1, help_text='Quantas horas por dia você fica sentado em dias de semana?', max_digits=4)),
                ('horas_sentado_fim_semana', models.DecimalField(decimal_places=1, help_text='Quantas horas por dia você fica sentado em fins de semana?', max_digits=4)),
                ('nivel_atividade', models.CharField(blank=True, choices=[('baixo', 'Baixo'), ('moderado', 'Moderado'), ('alto', 'Alto')], max_length=20)),
                ('met_total', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('data_preenchimento', models.DateTimeField(auto_now_add=True)),
                ('participante', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='pesquisa.participante')),
            ],
            options={
                'verbose_name': 'Questionário IPAQ',
                'verbose_name_plural': 'Questionários IPAQ',
            },
        ),
    ]
